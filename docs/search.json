{
  "articles": [
    {
      "path": "bitGPT.html",
      "title": "bitGPT",
      "description": "네이버 오픈 API를 이용한 데이터 수집 로직을 구현해 봅니다.  \n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io"
        }
      ],
      "date": "2023-06-24",
      "contents": "\n\nContents\nOverview\nFeatures\n\nInstall bitGPT\nPrepare API keys\nOpenAI API key 등록\nNaver 파파고 API key 등록\n\n리소스\n프로그램 리소스\n참고 리소스\n\n\n\n\n\n\n\n들어가기\n웹 브라우저에서 chatGPT를 사용하신다구요?\n\n그럼 문서에 chatGPT 질문과 답변을 넣을 때는 어떻게 하실건가요?.\n\nCopy & Paste가 능사는 아닙니다. bitGPT를 사용해 보세요. OPEN API로 쉽게 chatGPT를 연동합니다.\n\n\nOverview\nchatGPT를 보다 쉽게 사용할 수 있는, 그리고 한국어를 지원하는 bitGPT.\nFeatures\nopen API key를 관리 기능으로 인한 손쉬운 서비스 인터페이싱\nOpenAI의 API key\nNaver 파파고의 client ID와 secret\n\nOpenAI의 채팅 자동 완성\nOpenAI의 텍스트 자동 완성\n한국어 프롬프트는 영어 프롬프트로 번역되어 질의하고 한글 결과 반환\n\nOpenAI의 이미지 프로세싱\n이미지 생성\n영어 프롬프트와 한국어 프롬프트 지원\n한국어 프롬프트는 영어 프롬프트로 번역되어 질의\n\n이미지 편집\n영어 프롬프트와 한국어 프롬프트 지원\n한국어 프롬프트는 영어 프롬프트로 번역되어 질의\n\n이미지 변형\n\n음성의 녹취를 위한 오디오 녹음 기능\nOpenAI의 STT(Speech to Text)\nNaver 파파고의 텍스트 번역기\nInstall bitGPT\ngithub 리파지토리로부터 다음의 명령어로 패키지를 설치합니다.:\n\n\ndevtools::install_github(\"bit2r/bitGPT\")\n\n\nPrepare API keys\nchatGPT를 사용하기 위해서는 OpenAI 링크에서 회원을 가입하고 OpenAI API key를 발급받아야 합니다. 가입 후 첫 3달은 18 US 달러 credit이 무료이나, 이후에는 유료임을 인지하고 진행하시기 바랍니다.\n또한 한국어 환경으로 좀 더 편안한 사용을 위해서는 Naver 파파고 API key도 준비해야 합니다. 오픈 API 이용신청 링크에서 애플리케이션 등록(API 이용신청)을 통해서 API key를 발급받아야 합니다.\nOpenAI API key 등록\nAPI key는 공유되어서는 안됩니다. 예시에서는 OpenAI API key가 XXXXXXXXXXX임을 가정하였습니다.\nregist_openai_key()를 한번 수행하면, 번거롭게 매번 세션마다 API key를 설정할 필요가 없습니다.\n\n\nlibrary(bitGPT)\n\n# 실제 사용자가 할당받은 openai API key를 사용합니다.\nregist_openai_key(\"XXXXXXXXXXX\")\n\n\n만약에 개인 컴퓨터가 아닌 여러 사용자가 사용하는 환경에 bitGPT 패키지를 설치한 경우라면, API key의 보안을 위해서 regist_openai_key()대신 set_openai_key()를 사용하세요.\nset_openai_key()는 OpenAI API key를 R System environment에 설정하기 때문에 세션이 종료되고 다시 R을 구동해서 새로운 세션이 생기면, 재설정해야 합니다.\n\n\n# 실제 사용자가 할당받은 openai API key를 사용합니다.\nset_openai_key(\"XXXXXXXXXXX\")\n\n\nNaver 파파고 API key 등록\nNaver 파파고 API key는 client ID와 client secret로 구성되어 있습니다. OpenAI API key와 유사한 방법으로 regist_naver_key()를 한번 수행하여 등록하거나, set_naver_key()로 세션 내에서 설정합니다.\n\n\n# 실제 사용자가 할당받은 Naver API key로 등록합니다.\nregist_naver_key(client_id = \"XXXXXXXXXXX\", client_secret = \"XXXXXXXXXXX\")\n\n\n\n\n# 실제 사용자가 할당받은 Naver API key로 설정합니다.\nset_naver_key(client_id = \"XXXXXXXXXXX\", client_secret = \"XXXXXXXXXXX\")\n\n\n리소스\n프로그램 리소스\nGithub\n참고 리소스\npkgdown document\nbitGPT 패키지 문서 페이지\n\nchatGPT와 데이터 사이언스\n2023년 4월 서울 R미트업 발표자료\n\n",
      "last_modified": "2023-06-18T23:04:26+09:00"
    },
    {
      "path": "bitPublish.html",
      "title": "bitPublish",
      "description": "네이버 오픈 API를 이용한 데이터 수집 로직을 구현해 봅니다.  \n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io"
        }
      ],
      "date": "2023-06-24",
      "contents": "\n\nContents\n오픈 API\n대상 API\n네이버 뉴스 검색\nAPI 기본 정보\n요청 변수 (request parameter)\n출력 결과\n준비사항\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\n\n\n\n\n\n\n\n들어가기\n공공 데이터 및 기업의 인터넷 서비스의 다수가 오픈 API를 통해서 관련 데이터를 제공합니다.\n\n이제는 데이터 수집을 위해서 오픈 API를 이용할 수 있는 기술을 습득해야 합니다.\n\n이제 여러분은 NAVER의 오픈 API를 다룰 수 있게 됩니다.\n\n\n오픈 API\n오픈 API(Open Application Programming Interface, Open API, 공개 API) 또는 공개 API는 개발자라면 누구나 사용할 수 있도록 공개된 API를 말하며, 개발자에게 사유 응용 소프트웨어나 웹 서비스의 프로그래밍 적인 권한을 제공합니다.1\n\n\n\n\n수년 전만해도 공동 데이터의 수집과 NAVER 웹 페이지의 데이터를 수집하기 위해서는 웹 페이지를 핸들링하는 기술을 통해서 데이터를 Scraping 해야 했습니다. 그러나 이제는 해당 기관과 업체에서 오픈 API를 제공하기 때문에, 합법적인 방법으로 원하는 데이터를 수집할 수 있는 세상이 되었습니다.\n대상 API\n네이버 뉴스 검색\n네이버\n\n아파트 실거래 데이터 가져오기\n공공 데이터 포털\n\n네이버 뉴스 검색\n네이버 뉴스 검색 결과를 출력해주는 REST API를 이용해서 뉴스 데이터를 수집합니다. Documents > 서비스 API > 검색 > 뉴스에 해당 API에 대한 스팩이 설명되어 있습니다.\nAPI 기본 정보\n다음과 같은 두 가지의 API가 있습니다. 여기서는 출력 포맷이 XML인 API를 이용합니다.\n메서드\n인증\n요청 URL\n출력 포맷\nGET\n-\nhttps://openapi.naver.com/v1/search/news.xml\nXML\nGET\n-\nhttps://openapi.naver.com/v1/search/news.json\nJSON\n요청 변수 (request parameter)\n요청 변수\n타입\n필수여부\n기본값\n설명\nquery\nstring\nY\n-\n검색을 원하는 문자열로서 UTF-8로 인코딩\ndisplay\ninteger\nN\n10(기본값), 100(최대)\n검색 결과 출력 건수 지정\nstart\ninteger\nN\n1(기본값), 1000(최대)\n검색 시작 위치로 최대 1000까지 가능\nsort\nstring\nN\nsim, date(기본값)\n정렬 옵션: sim (유사도순), date (날짜순)\n출력 결과\n필드\n타입\n설명\nrss\n-\n디버그를 쉽게 하고 RSS 리더기만으로 이용할 수 있게 하기 위해 만든 RSS 포맷의 컨테이너이며 그 외의 특별한 의미는 없다.\nchannel\n-\n검색 결과를 포함하는 컨테이너이다. 이 안에 있는 title, link, description 등의 항목은 참고용으로 무시해도 무방하다.\nlastBuildDate\ndatetime\n검색 결과를 생성한 시간이다.\ntotal\ninteger\n검색 결과 문서의 총 개수를 의미한다.\nstart\ninteger\n검색 결과 문서 중, 문서의 시작점을 의미한다.\ndisplay\ninteger\n검색된 검색 결과의 개수이다.\nitem/items\n-\nXML 포멧에서는 item 태그로, JSON 포멧에서는 items 속성으로 표현된다. 개별 검색 결과이며 title, originallink, link, description, pubDate를 포함한다.\ntitle\nstring\n개별 검색 결과이며, title, originallink, link, description, pubDate 를 포함한다.\noriginallink\nstring\n검색 결과 문서의 제공 언론사 하이퍼텍스트 link를 나타낸다.\nlink\nstring\n검색 결과 문서의 제공 네이버 하이퍼텍스트 link를 나타낸다.\ndescription\nstring\n검색 결과 문서의 내용을 요약한 패시지 정보이다. 문서 전체의 내용은 link를 따라가면 읽을 수 있다. 패시지에서 검색어와 일치하는 부분은 태그로 감싸져 있다.\npubDate\ndatetime\n검색 결과 문서가 네이버에 제공된 시간이다.\n준비사항\n애플리케이션 등록: 네이버 오픈 API로 개발하시려면 먼저 ‘Application-애플리케이션 등록’ 메뉴에서 애플리케이션을 등록하셔야 합니다.\n\n\n\nFigure 1: 애플리케이션 등록 (API 이용신청) 화면\n\n\n\n\n\n\n\n주의\n\n클라이언트 아이디(Client ID)와  클라이언트 보안키(Client Secret)는 개인 사용자에게 발급된 정보이므로 반드시 보안에 주의해야 합니다. 타인에게 공개 및 공유하면 안된 중요한 정보이므로 사용에 주의해야 합니다.\n\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\nXML 출력 포맷을 사용하기 때문에 다음 요청 URL을 사용합니다.\nhttps://openapi.naver.com/v1/search/news.xml\n검색 질의어인 query는 UTF-8로 인코딩해야 하기 때문에 enc2utf8()와 URLencode()을 사용합니다. GET 방식의 호출 URL이기 때문에 요청변수 영역을 ?로 구분하고, 요청 변수들은 &로 구분합니다.\n\n\n  searchUrl <- \"https://openapi.naver.com/v1/search/news.xml\"\n\n  query <- query %>%\n    enc2utf8() %>%\n    URLencode()\n\n  url <- glue::glue(\"{searchUrl}?query={query}&display={chunk}&start={chunk_no}&sort={sort}\")\n\n\n\n\n\n\n주의\n\nR은 눈사람을 만드는 것처럼 데이터를 키워나가면 안됩니다.\n\nrbind() 함수를 이용해서 API를 순차적으로 호출하면서 데이터 프레임에 결과를 붙여나가면 안됩니다. R 데이터 프레임에 관측치를 붙여나가면서 데이터를 크게 불리는 작업은 치명적인 성능 감소를 가져옵니다.\n\n\n\n출처: https://ko.wikipedia.org/wiki/오픈_API↩︎\n",
      "last_modified": "2023-06-18T23:04:26+09:00"
    },
    {
      "path": "bitReport.html",
      "title": "bitReport",
      "description": "네이버 오픈 API를 이용한 데이터 수집 로직을 구현해 봅니다.  \n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io"
        }
      ],
      "date": "2023-06-24",
      "contents": "\n\nContents\n무엇이 문제인가?\nbitReport 기능과 특징\n기능\n특징\n\n사용방법\n정적 리포트 작성\n요청 변수 (request parameter)\n출력 결과\n준비사항\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\n\n\n\n\n\n\n\n들어가기\n공유 목적으로 배포할 \n데이터분석 보고서의 핵심은 인사이트의 제공\n에 있습니다.\n\n그러나 인사이트 발굴을 위한 분석가의 노력과 더불어 보고서 서식을 만들고, 시각화 결과를 옮겨서 \n문서를 편집하는 일련의 작업들에도 많은 리소스가 소비\n됩니다.\n\n이와 같은 \n휴먼 리소스의 소비를 줄이고자 보고서 (반)자동화 방법을 제시\n합니다.\n\n\n무엇이 문제인가?\nMarkdown이라는 훌륭한 조판/저작 도구가 있으나 활용하지 않는다.\n파워포인트 편집 중심\n분석 결과는 파워포인트로 탄생하지만,\n과정에서의 정보는 개인의 암묵적 지식으로 남고,\n개인과 조직의 자산으로 남지 않는다.\n\n\n재현성의 부재\nReproducible Research 기반의 저작이 이루어지지 않음\n파워포인트로의 편집시에 코딩 오류가 발생할 수 있음\n버전관리 이슈로 보고서의 결과가 관리되는 스크립트의 결과가 아닌 엉뚱한 결과로 배포될 수 있음\n\n\n노동 집약적인 서식작업/편집작업\n결과를 복사하거나, 플롯을 복사해서 파워포인트에 붙여넣음\n수작업의 자동화로 분석 결과의 코딩오류를 줄이고,\n단순 작업을 자동화로 대체하여 리소스를 절약할 필요가 있음\n\n\nbitReport 기능과 특징\n기능\n정적 리포트 작성\n세로방향 PDF 페이지 문서 생성\n웹 페이지 생성\n\n동적 리포트 작성\n웹 대시보드 생성\n웹 슬라이드 문서 생성\n\n특징\n보고서 템플리트 제공\nRStudio의 메뉴로 제공\n템플리트를 수정해서 보고서 생성\n\n시각화 및 도표 출력 템플리트 함수 제공\n템플리트 함수를 이용하거나 수정해서 보고서에 삽입할 도표나 플롯 출력\n\n한글 폰트 포함\nNanumSquare 폰트\n\n웹 페이지를 스크린샷 할수 있는 프로그램 포함\nwebshot 패키지를 이용한 스크린 샷\n\n사용방법\n정적 리포트 작성\n세로방향 PDF 페이지 문서 생성\n다음과 같은 두 가지의 API가 있습니다. 여기서는 출력 포맷이 XML인 API를 이용합니다.\n메서드\n인증\n요청 URL\n출력 포맷\nGET\n-\nhttps://openapi.naver.com/v1/search/news.xml\nXML\nGET\n-\nhttps://openapi.naver.com/v1/search/news.json\nJSON\n요청 변수 (request parameter)\n요청 변수\n타입\n필수여부\n기본값\n설명\nquery\nstring\nY\n-\n검색을 원하는 문자열로서 UTF-8로 인코딩\ndisplay\ninteger\nN\n10(기본값), 100(최대)\n검색 결과 출력 건수 지정\nstart\ninteger\nN\n1(기본값), 1000(최대)\n검색 시작 위치로 최대 1000까지 가능\nsort\nstring\nN\nsim, date(기본값)\n정렬 옵션: sim (유사도순), date (날짜순)\n출력 결과\n필드\n타입\n설명\nrss\n-\n디버그를 쉽게 하고 RSS 리더기만으로 이용할 수 있게 하기 위해 만든 RSS 포맷의 컨테이너이며 그 외의 특별한 의미는 없다.\nchannel\n-\n검색 결과를 포함하는 컨테이너이다. 이 안에 있는 title, link, description 등의 항목은 참고용으로 무시해도 무방하다.\nlastBuildDate\ndatetime\n검색 결과를 생성한 시간이다.\ntotal\ninteger\n검색 결과 문서의 총 개수를 의미한다.\nstart\ninteger\n검색 결과 문서 중, 문서의 시작점을 의미한다.\ndisplay\ninteger\n검색된 검색 결과의 개수이다.\nitem/items\n-\nXML 포멧에서는 item 태그로, JSON 포멧에서는 items 속성으로 표현된다. 개별 검색 결과이며 title, originallink, link, description, pubDate를 포함한다.\ntitle\nstring\n개별 검색 결과이며, title, originallink, link, description, pubDate 를 포함한다.\noriginallink\nstring\n검색 결과 문서의 제공 언론사 하이퍼텍스트 link를 나타낸다.\nlink\nstring\n검색 결과 문서의 제공 네이버 하이퍼텍스트 link를 나타낸다.\ndescription\nstring\n검색 결과 문서의 내용을 요약한 패시지 정보이다. 문서 전체의 내용은 link를 따라가면 읽을 수 있다. 패시지에서 검색어와 일치하는 부분은 태그로 감싸져 있다.\npubDate\ndatetime\n검색 결과 문서가 네이버에 제공된 시간이다.\n준비사항\n애플리케이션 등록: 네이버 오픈 API로 개발하시려면 먼저 ‘Application-애플리케이션 등록’ 메뉴에서 애플리케이션을 등록하셔야 합니다.\n\n\n\nFigure 1: 애플리케이션 등록 (API 이용신청) 화면\n\n\n\n\n\n\n\n주의\n\n클라이언트 아이디(Client ID)와  클라이언트 보안키(Client Secret)는 개인 사용자에게 발급된 정보이므로 반드시 보안에 주의해야 합니다. 타인에게 공개 및 공유하면 안된 중요한 정보이므로 사용에 주의해야 합니다.\n\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\nXML 출력 포맷을 사용하기 때문에 다음 요청 URL을 사용합니다.\nhttps://openapi.naver.com/v1/search/news.xml\n검색 질의어인 query는 UTF-8로 인코딩해야 하기 때문에 enc2utf8()와 URLencode()을 사용합니다. GET 방식의 호출 URL이기 때문에 요청변수 영역을 ?로 구분하고, 요청 변수들은 &로 구분합니다.\n\n\n  searchUrl <- \"https://openapi.naver.com/v1/search/news.xml\"\n\n  query <- query %>%\n    enc2utf8() %>%\n    URLencode()\n\n  url <- glue::glue(\"{searchUrl}?query={query}&display={chunk}&start={chunk_no}&sort={sort}\")\n\n\n\n\n\n\n주의\n\nR은 눈사람을 만드는 것처럼 데이터를 키워나가면 안됩니다.\n\nrbind() 함수를 이용해서 API를 순차적으로 호출하면서 데이터 프레임에 결과를 붙여나가면 안됩니다. R 데이터 프레임에 관측치를 붙여나가면서 데이터를 크게 불리는 작업은 치명적인 성능 감소를 가져옵니다.\n\n\n\n\n\n",
      "last_modified": "2023-06-18T23:04:26+09:00"
    },
    {
      "path": "CODE_OF_CONDUCT.html",
      "title": "Contributor Covenant Code of Conduct",
      "author": [],
      "contents": "\nOur Pledge\nWe as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\nOur Standards\nExamples of behavior that contributes to a positive environment for our community include:\nDemonstrating empathy and kindness toward other people\nBeing respectful of differing opinions, viewpoints, and experiences\nGiving and gracefully accepting constructive feedback\nAccepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\nFocusing on what is best not just for us as individuals, but for the overall community\nExamples of unacceptable behavior include:\nThe use of sexualized language or imagery, and sexual attention or advances of any kind\nTrolling, insulting or derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or email address, without their explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\nEnforcement Responsibilities\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take appropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive, or harmful.\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for moderation decisions when appropriate.\nScope\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event.\nEnforcement\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible for enforcement at \\[INSERT CONTACT METHOD\\].\nAll complaints will be reviewed and investigated promptly and fairly.\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\nEnforcement Guidelines\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem in violation of this Code of Conduct:\n1. Correction\nCommunity Impact: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the community.\nConsequence: A private, written warning from community leaders, providing clarity around the nature of the violation and an explanation of why the behavior was inappropriate.\nA public apology may be requested.\n2. Warning\nCommunity Impact: A violation through a single incident or series of actions.\nConsequence: A warning with consequences for continued behavior.\nNo interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, for a specified period of time.\nThis includes avoiding interactions in community spaces as well as external channels like social media.\nViolating these terms may lead to a temporary or permanent ban.\n3. Temporary Ban\nCommunity Impact: A serious violation of community standards, including sustained inappropriate behavior.\nConsequence: A temporary ban from any sort of interaction or public communication with the community for a specified period of time.\nNo public or private interaction with the people involved, including unsolicited interaction with those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n4. Permanent Ban\nCommunity Impact: Demonstrating a pattern of violation of community standards, including sustained inappropriate behavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\nConsequence: A permanent ban from any sort of public interaction within the community.\nAttribution\nThis Code of Conduct is adapted from the Contributor Covenant, version 2.0, available at https://www.contributor-covenant.org/version/2/0/ code_of_conduct.html.\nCommunity Impact Guidelines were inspired by Mozilla’s code of conduct enforcement ladder.\nFor answers to common questions about this code of conduct, see the FAQ at https://www.contributor-covenant.org/faq.\nTranslations are available at https:// www.contributor-covenant.org/translations.\n\n\n",
      "last_modified": "2023-06-18T23:04:26+09:00"
    },
    {
      "path": "index.html",
      "title": "핸즈온 개요",
      "description": "본 핸즈온은 **전자출판 개념의 이해**를 돕고, **bitPublish**의 사용법 학습을 통해서 **사용자가 직접 출판물을 저작**할 수 있는 방법 습득을 목적으로 합니다. \n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io/"
        }
      ],
      "date": "2023-06-24",
      "contents": "\n\nContents\n프로그램 개요\n발표자\n핸즈온 내용\n사전 준비 작업\n네이버 검색 API 이용을 위해 애플리케이션 등록\n\n\n프로그램 개요\n주제: “챗GPT 디지털 글쓰기와 출판 워크샵”\n챗GPT 활용 글감 작성(챗GPT)\n챗GPT를 활용하여 독창적이고 흥미로운 글감을 발굴하는 방법 학습\n\n디지털 글쓰기 외양(Quarto)\n디지털 환경에서 효과적인 글쓰기를 위한 형식과 구조 학습\n\n콘텐츠 배포와 공유(GitHub/Quarto Pub)\n디지털 플랫폼을 통해 제작한 콘텐츠의 효과적 배포/공유 학습\n\n전자출판(bitPublish)\n전자출판 과정의 이해 및 실제 출판 작업 실습\n\n\n일시:\n2023년 6월 24일 (토) 13:00 ~ 17:00\n\n장소:\n성균관대학교 국제관 9B208\n\n주최:\n한국R사용자회\n\n발표자\n유충현:\n현) 한국R사용자회 대표\n현) 한화생명 DataLab 부장\n\n핸즈온 내용\nbitPublish로 서적 저작하기\n아젠다\n전자출판의 이해\nbitPublish의 이해\n본문 컨텐츠에 bitGPT 적용\n\n목적\n자신의 지식과 노하우를 책으로 저작하기 위한 자신감 갖기\n\n\nbitReport로 보고서 생성하기\n아젠다\nbitReport 사용법의 이해\n\n목적\n재현가능한 깔끔한 보고서를 작성하는 방법 확보\n\n\n\n“bitReport로 보고서 생성하기”는 본 워크샾 주제와 관련이 적은 추가 컨텐츠로, 시간이 여의치 않으면 소개로 학습을 마칠 수 있습니다.\n\n사전 준비 작업\n네이버 검색 API 이용을 위해 애플리케이션 등록\n네이버 회원가입과 개발자센터 접속\n네이버 개발자센터 접속\n\n애플리케이션등록 신청\n애플리케이션 등록 화면 이동 후,\n사용 API로 검색 선택 후\n비로그인 오픈 API 서비스 환경으로 WEB 설정 선택 후 등록하기\n\nkosacap 패키지의 설치\n공공데이터 및 네이버 뉴스 스크랩하는 패키지\n설치\nremotes::install_github(“choonghyunryu/koscrap”)\n\n\n\n\n\n",
      "last_modified": "2023-06-18T23:00:35+09:00"
    },
    {
      "path": "intro_pitpublish.html",
      "title": "bitPublish 사용하기",
      "description": "네이버 오픈 API를 이용한 데이터 수집 로직을 구현해 봅니다.  \n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io"
        }
      ],
      "date": "2023-06-24",
      "contents": "\n\nContents\n오픈 API\n대상 API\n네이버 뉴스 검색\nAPI 기본 정보\n요청 변수 (request parameter)\n출력 결과\n준비사항\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\n\n\n\n\n\n\n\n들어가기\n공공 데이터 및 기업의 인터넷 서비스의 다수가 오픈 API를 통해서 관련 데이터를 제공합니다.\n\n이제는 데이터 수집을 위해서 오픈 API를 이용할 수 있는 기술을 습득해야 합니다.\n\n이제 여러분은 NAVER의 오픈 API를 다룰 수 있게 됩니다.\n\n\n오픈 API\n오픈 API(Open Application Programming Interface, Open API, 공개 API) 또는 공개 API는 개발자라면 누구나 사용할 수 있도록 공개된 API를 말하며, 개발자에게 사유 응용 소프트웨어나 웹 서비스의 프로그래밍 적인 권한을 제공합니다.1\n\n\n\n\n수년 전만해도 공동 데이터의 수집과 NAVER 웹 페이지의 데이터를 수집하기 위해서는 웹 페이지를 핸들링하는 기술을 통해서 데이터를 Scraping 해야 했습니다. 그러나 이제는 해당 기관과 업체에서 오픈 API를 제공하기 때문에, 합법적인 방법으로 원하는 데이터를 수집할 수 있는 세상이 되었습니다.\n대상 API\n네이버 뉴스 검색\n네이버\n\n아파트 실거래 데이터 가져오기\n공공 데이터 포털\n\n네이버 뉴스 검색\n네이버 뉴스 검색 결과를 출력해주는 REST API를 이용해서 뉴스 데이터를 수집합니다. Documents > 서비스 API > 검색 > 뉴스에 해당 API에 대한 스팩이 설명되어 있습니다.\nAPI 기본 정보\n다음과 같은 두 가지의 API가 있습니다. 여기서는 출력 포맷이 XML인 API를 이용합니다.\n메서드\n인증\n요청 URL\n출력 포맷\nGET\n-\nhttps://openapi.naver.com/v1/search/news.xml\nXML\nGET\n-\nhttps://openapi.naver.com/v1/search/news.json\nJSON\n요청 변수 (request parameter)\n요청 변수\n타입\n필수여부\n기본값\n설명\nquery\nstring\nY\n-\n검색을 원하는 문자열로서 UTF-8로 인코딩\ndisplay\ninteger\nN\n10(기본값), 100(최대)\n검색 결과 출력 건수 지정\nstart\ninteger\nN\n1(기본값), 1000(최대)\n검색 시작 위치로 최대 1000까지 가능\nsort\nstring\nN\nsim, date(기본값)\n정렬 옵션: sim (유사도순), date (날짜순)\n출력 결과\n필드\n타입\n설명\nrss\n-\n디버그를 쉽게 하고 RSS 리더기만으로 이용할 수 있게 하기 위해 만든 RSS 포맷의 컨테이너이며 그 외의 특별한 의미는 없다.\nchannel\n-\n검색 결과를 포함하는 컨테이너이다. 이 안에 있는 title, link, description 등의 항목은 참고용으로 무시해도 무방하다.\nlastBuildDate\ndatetime\n검색 결과를 생성한 시간이다.\ntotal\ninteger\n검색 결과 문서의 총 개수를 의미한다.\nstart\ninteger\n검색 결과 문서 중, 문서의 시작점을 의미한다.\ndisplay\ninteger\n검색된 검색 결과의 개수이다.\nitem/items\n-\nXML 포멧에서는 item 태그로, JSON 포멧에서는 items 속성으로 표현된다. 개별 검색 결과이며 title, originallink, link, description, pubDate를 포함한다.\ntitle\nstring\n개별 검색 결과이며, title, originallink, link, description, pubDate 를 포함한다.\noriginallink\nstring\n검색 결과 문서의 제공 언론사 하이퍼텍스트 link를 나타낸다.\nlink\nstring\n검색 결과 문서의 제공 네이버 하이퍼텍스트 link를 나타낸다.\ndescription\nstring\n검색 결과 문서의 내용을 요약한 패시지 정보이다. 문서 전체의 내용은 link를 따라가면 읽을 수 있다. 패시지에서 검색어와 일치하는 부분은 태그로 감싸져 있다.\npubDate\ndatetime\n검색 결과 문서가 네이버에 제공된 시간이다.\n준비사항\n애플리케이션 등록: 네이버 오픈 API로 개발하시려면 먼저 ‘Application-애플리케이션 등록’ 메뉴에서 애플리케이션을 등록하셔야 합니다.\n\n\n\nFigure 1: 애플리케이션 등록 (API 이용신청) 화면\n\n\n\n\n\n\n\n주의\n\n클라이언트 아이디(Client ID)와  클라이언트 보안키(Client Secret)는 개인 사용자에게 발급된 정보이므로 반드시 보안에 주의해야 합니다. 타인에게 공개 및 공유하면 안된 중요한 정보이므로 사용에 주의해야 합니다.\n\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\nXML 출력 포맷을 사용하기 때문에 다음 요청 URL을 사용합니다.\nhttps://openapi.naver.com/v1/search/news.xml\n검색 질의어인 query는 UTF-8로 인코딩해야 하기 때문에 enc2utf8()와 URLencode()을 사용합니다. GET 방식의 호출 URL이기 때문에 요청변수 영역을 ?로 구분하고, 요청 변수들은 &로 구분합니다.\n\n\n  searchUrl <- \"https://openapi.naver.com/v1/search/news.xml\"\n\n  query <- query %>%\n    enc2utf8() %>%\n    URLencode()\n\n  url <- glue::glue(\"{searchUrl}?query={query}&display={chunk}&start={chunk_no}&sort={sort}\")\n\n\n\n\n\n\n주의\n\nR은 눈사람을 만드는 것처럼 데이터를 키워나가면 안됩니다.\n\nrbind() 함수를 이용해서 API를 순차적으로 호출하면서 데이터 프레임에 결과를 붙여나가면 안됩니다. R 데이터 프레임에 관측치를 붙여나가면서 데이터를 크게 불리는 작업은 치명적인 성능 감소를 가져옵니다.\n\n\n\n출처: https://ko.wikipedia.org/wiki/오픈_API↩︎\n",
      "last_modified": "2023-06-18T23:01:30+09:00"
    },
    {
      "path": "publish_book.html",
      "title": "디지털 서적 저작하기",
      "description": "네이버 오픈 API를 이용한 데이터 수집 로직을 구현해 봅니다.  \n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io"
        }
      ],
      "date": "2023-06-24",
      "contents": "\n\nContents\n오픈 API\n대상 API\n네이버 뉴스 검색\nAPI 기본 정보\n요청 변수 (request parameter)\n출력 결과\n준비사항\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\n\n\n\n\n\n\n\n들어가기\n공공 데이터 및 기업의 인터넷 서비스의 다수가 오픈 API를 통해서 관련 데이터를 제공합니다.\n\n이제는 데이터 수집을 위해서 오픈 API를 이용할 수 있는 기술을 습득해야 합니다.\n\n이제 여러분은 NAVER의 오픈 API를 다룰 수 있게 됩니다.\n\n\n오픈 API\n오픈 API(Open Application Programming Interface, Open API, 공개 API) 또는 공개 API는 개발자라면 누구나 사용할 수 있도록 공개된 API를 말하며, 개발자에게 사유 응용 소프트웨어나 웹 서비스의 프로그래밍 적인 권한을 제공합니다.1\n\n\n\n\n수년 전만해도 공동 데이터의 수집과 NAVER 웹 페이지의 데이터를 수집하기 위해서는 웹 페이지를 핸들링하는 기술을 통해서 데이터를 Scraping 해야 했습니다. 그러나 이제는 해당 기관과 업체에서 오픈 API를 제공하기 때문에, 합법적인 방법으로 원하는 데이터를 수집할 수 있는 세상이 되었습니다.\n대상 API\n네이버 뉴스 검색\n네이버\n\n아파트 실거래 데이터 가져오기\n공공 데이터 포털\n\n네이버 뉴스 검색\n네이버 뉴스 검색 결과를 출력해주는 REST API를 이용해서 뉴스 데이터를 수집합니다. Documents > 서비스 API > 검색 > 뉴스에 해당 API에 대한 스팩이 설명되어 있습니다.\nAPI 기본 정보\n다음과 같은 두 가지의 API가 있습니다. 여기서는 출력 포맷이 XML인 API를 이용합니다.\n메서드\n인증\n요청 URL\n출력 포맷\nGET\n-\nhttps://openapi.naver.com/v1/search/news.xml\nXML\nGET\n-\nhttps://openapi.naver.com/v1/search/news.json\nJSON\n요청 변수 (request parameter)\n요청 변수\n타입\n필수여부\n기본값\n설명\nquery\nstring\nY\n-\n검색을 원하는 문자열로서 UTF-8로 인코딩\ndisplay\ninteger\nN\n10(기본값), 100(최대)\n검색 결과 출력 건수 지정\nstart\ninteger\nN\n1(기본값), 1000(최대)\n검색 시작 위치로 최대 1000까지 가능\nsort\nstring\nN\nsim, date(기본값)\n정렬 옵션: sim (유사도순), date (날짜순)\n출력 결과\n필드\n타입\n설명\nrss\n-\n디버그를 쉽게 하고 RSS 리더기만으로 이용할 수 있게 하기 위해 만든 RSS 포맷의 컨테이너이며 그 외의 특별한 의미는 없다.\nchannel\n-\n검색 결과를 포함하는 컨테이너이다. 이 안에 있는 title, link, description 등의 항목은 참고용으로 무시해도 무방하다.\nlastBuildDate\ndatetime\n검색 결과를 생성한 시간이다.\ntotal\ninteger\n검색 결과 문서의 총 개수를 의미한다.\nstart\ninteger\n검색 결과 문서 중, 문서의 시작점을 의미한다.\ndisplay\ninteger\n검색된 검색 결과의 개수이다.\nitem/items\n-\nXML 포멧에서는 item 태그로, JSON 포멧에서는 items 속성으로 표현된다. 개별 검색 결과이며 title, originallink, link, description, pubDate를 포함한다.\ntitle\nstring\n개별 검색 결과이며, title, originallink, link, description, pubDate 를 포함한다.\noriginallink\nstring\n검색 결과 문서의 제공 언론사 하이퍼텍스트 link를 나타낸다.\nlink\nstring\n검색 결과 문서의 제공 네이버 하이퍼텍스트 link를 나타낸다.\ndescription\nstring\n검색 결과 문서의 내용을 요약한 패시지 정보이다. 문서 전체의 내용은 link를 따라가면 읽을 수 있다. 패시지에서 검색어와 일치하는 부분은 태그로 감싸져 있다.\npubDate\ndatetime\n검색 결과 문서가 네이버에 제공된 시간이다.\n준비사항\n애플리케이션 등록: 네이버 오픈 API로 개발하시려면 먼저 ‘Application-애플리케이션 등록’ 메뉴에서 애플리케이션을 등록하셔야 합니다.\n\n\n\nFigure 1: 애플리케이션 등록 (API 이용신청) 화면\n\n\n\n\n\n\n\n주의\n\n클라이언트 아이디(Client ID)와  클라이언트 보안키(Client Secret)는 개인 사용자에게 발급된 정보이므로 반드시 보안에 주의해야 합니다. 타인에게 공개 및 공유하면 안된 중요한 정보이므로 사용에 주의해야 합니다.\n\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\nXML 출력 포맷을 사용하기 때문에 다음 요청 URL을 사용합니다.\nhttps://openapi.naver.com/v1/search/news.xml\n검색 질의어인 query는 UTF-8로 인코딩해야 하기 때문에 enc2utf8()와 URLencode()을 사용합니다. GET 방식의 호출 URL이기 때문에 요청변수 영역을 ?로 구분하고, 요청 변수들은 &로 구분합니다.\n\n\n  searchUrl <- \"https://openapi.naver.com/v1/search/news.xml\"\n\n  query <- query %>%\n    enc2utf8() %>%\n    URLencode()\n\n  url <- glue::glue(\"{searchUrl}?query={query}&display={chunk}&start={chunk_no}&sort={sort}\")\n\n\n\n\n\n\n주의\n\nR은 눈사람을 만드는 것처럼 데이터를 키워나가면 안됩니다.\n\nrbind() 함수를 이용해서 API를 순차적으로 호출하면서 데이터 프레임에 결과를 붙여나가면 안됩니다. R 데이터 프레임에 관측치를 붙여나가면서 데이터를 크게 불리는 작업은 치명적인 성능 감소를 가져옵니다.\n\n\n\n출처: https://ko.wikipedia.org/wiki/오픈_API↩︎\n",
      "last_modified": "2023-06-18T23:01:41+09:00"
    },
    {
      "path": "publish_report.html",
      "title": "덤으로 리포트 저작하기",
      "description": "네이버 오픈 API를 이용한 데이터 수집 로직을 구현해 봅니다.  \n",
      "author": [
        {
          "name": "유충현",
          "url": "https://choonghyunryu.github.io"
        }
      ],
      "date": "2023-06-24",
      "contents": "\n\nContents\n오픈 API\n대상 API\n네이버 뉴스 검색\nAPI 기본 정보\n요청 변수 (request parameter)\n출력 결과\n준비사항\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\n\n\n\n\n\n\n\n들어가기\n공공 데이터 및 기업의 인터넷 서비스의 다수가 오픈 API를 통해서 관련 데이터를 제공합니다.\n\n이제는 데이터 수집을 위해서 오픈 API를 이용할 수 있는 기술을 습득해야 합니다.\n\n이제 여러분은 NAVER의 오픈 API를 다룰 수 있게 됩니다.\n\n\n오픈 API\n오픈 API(Open Application Programming Interface, Open API, 공개 API) 또는 공개 API는 개발자라면 누구나 사용할 수 있도록 공개된 API를 말하며, 개발자에게 사유 응용 소프트웨어나 웹 서비스의 프로그래밍 적인 권한을 제공합니다.1\n\n\n\n\n수년 전만해도 공동 데이터의 수집과 NAVER 웹 페이지의 데이터를 수집하기 위해서는 웹 페이지를 핸들링하는 기술을 통해서 데이터를 Scraping 해야 했습니다. 그러나 이제는 해당 기관과 업체에서 오픈 API를 제공하기 때문에, 합법적인 방법으로 원하는 데이터를 수집할 수 있는 세상이 되었습니다.\n대상 API\n네이버 뉴스 검색\n네이버\n\n아파트 실거래 데이터 가져오기\n공공 데이터 포털\n\n네이버 뉴스 검색\n네이버 뉴스 검색 결과를 출력해주는 REST API를 이용해서 뉴스 데이터를 수집합니다. Documents > 서비스 API > 검색 > 뉴스에 해당 API에 대한 스팩이 설명되어 있습니다.\nAPI 기본 정보\n다음과 같은 두 가지의 API가 있습니다. 여기서는 출력 포맷이 XML인 API를 이용합니다.\n메서드\n인증\n요청 URL\n출력 포맷\nGET\n-\nhttps://openapi.naver.com/v1/search/news.xml\nXML\nGET\n-\nhttps://openapi.naver.com/v1/search/news.json\nJSON\n요청 변수 (request parameter)\n요청 변수\n타입\n필수여부\n기본값\n설명\nquery\nstring\nY\n-\n검색을 원하는 문자열로서 UTF-8로 인코딩\ndisplay\ninteger\nN\n10(기본값), 100(최대)\n검색 결과 출력 건수 지정\nstart\ninteger\nN\n1(기본값), 1000(최대)\n검색 시작 위치로 최대 1000까지 가능\nsort\nstring\nN\nsim, date(기본값)\n정렬 옵션: sim (유사도순), date (날짜순)\n출력 결과\n필드\n타입\n설명\nrss\n-\n디버그를 쉽게 하고 RSS 리더기만으로 이용할 수 있게 하기 위해 만든 RSS 포맷의 컨테이너이며 그 외의 특별한 의미는 없다.\nchannel\n-\n검색 결과를 포함하는 컨테이너이다. 이 안에 있는 title, link, description 등의 항목은 참고용으로 무시해도 무방하다.\nlastBuildDate\ndatetime\n검색 결과를 생성한 시간이다.\ntotal\ninteger\n검색 결과 문서의 총 개수를 의미한다.\nstart\ninteger\n검색 결과 문서 중, 문서의 시작점을 의미한다.\ndisplay\ninteger\n검색된 검색 결과의 개수이다.\nitem/items\n-\nXML 포멧에서는 item 태그로, JSON 포멧에서는 items 속성으로 표현된다. 개별 검색 결과이며 title, originallink, link, description, pubDate를 포함한다.\ntitle\nstring\n개별 검색 결과이며, title, originallink, link, description, pubDate 를 포함한다.\noriginallink\nstring\n검색 결과 문서의 제공 언론사 하이퍼텍스트 link를 나타낸다.\nlink\nstring\n검색 결과 문서의 제공 네이버 하이퍼텍스트 link를 나타낸다.\ndescription\nstring\n검색 결과 문서의 내용을 요약한 패시지 정보이다. 문서 전체의 내용은 link를 따라가면 읽을 수 있다. 패시지에서 검색어와 일치하는 부분은 태그로 감싸져 있다.\npubDate\ndatetime\n검색 결과 문서가 네이버에 제공된 시간이다.\n준비사항\n애플리케이션 등록: 네이버 오픈 API로 개발하시려면 먼저 ‘Application-애플리케이션 등록’ 메뉴에서 애플리케이션을 등록하셔야 합니다.\n\n\n\nFigure 1: 애플리케이션 등록 (API 이용신청) 화면\n\n\n\n\n\n\n\n주의\n\n클라이언트 아이디(Client ID)와  클라이언트 보안키(Client Secret)는 개인 사용자에게 발급된 정보이므로 반드시 보안에 주의해야 합니다. 타인에게 공개 및 공유하면 안된 중요한 정보이므로 사용에 주의해야 합니다.\n\n\n네이버 뉴스 검색 프로그램 개발\n요청 URL 생성\nXML 출력 포맷을 사용하기 때문에 다음 요청 URL을 사용합니다.\nhttps://openapi.naver.com/v1/search/news.xml\n검색 질의어인 query는 UTF-8로 인코딩해야 하기 때문에 enc2utf8()와 URLencode()을 사용합니다. GET 방식의 호출 URL이기 때문에 요청변수 영역을 ?로 구분하고, 요청 변수들은 &로 구분합니다.\n\n\n  searchUrl <- \"https://openapi.naver.com/v1/search/news.xml\"\n\n  query <- query %>%\n    enc2utf8() %>%\n    URLencode()\n\n  url <- glue::glue(\"{searchUrl}?query={query}&display={chunk}&start={chunk_no}&sort={sort}\")\n\n\n\n\n\n\n주의\n\nR은 눈사람을 만드는 것처럼 데이터를 키워나가면 안됩니다.\n\nrbind() 함수를 이용해서 API를 순차적으로 호출하면서 데이터 프레임에 결과를 붙여나가면 안됩니다. R 데이터 프레임에 관측치를 붙여나가면서 데이터를 크게 불리는 작업은 치명적인 성능 감소를 가져옵니다.\n\n\n\n출처: https://ko.wikipedia.org/wiki/오픈_API↩︎\n",
      "last_modified": "2023-06-18T23:01:25+09:00"
    },
    {
      "path": "resources.html",
      "title": "학습 리소스",
      "description": "**수집데이터 분석** 애플리케이션 개발을 위한 Shiny, HTML, CSS 등에 대한 학습 리소스  \n",
      "author": [],
      "contents": "\n\nContents\nShiny 학습과 개발을 위한 리소스\nShiny 학습을 위한 리소스\n초보자를 위한 웹 개발 학습 리소스\nShiny 개발을 위한 리소스\n\n\nShiny 학습과 개발을 위한 리소스\nShiny 학습을 위한 리소스\nShiny 홈페이지 :\nhttps://shiny.rstudio.com/\n초급자 필수 사이트\n\nhtmltools 패키지 홈페이지 :\nhttps://rstudio.github.io/htmltools/\nshiny 앱에 html tags를 포함하는 기능\n\nshinydashboard 홈페이지 :\nhttps://rstudio.github.io/shinydashboard/\n초급자 필수 사이트\n\nMastering Shiny :\nhttps://mastering-shiny.org/\n중급자 이상\n\nBootstrap :\nhttps://getbootstrap.com/\n부트스트랩은 웹사이트를 쉽게 만들 수 있게 도와주는 HTML, CSS, JavaScript 프레임워크\nShiny는 내부적으로 Bootstrap와 인터페이스하여 반응형 앱을 구현하는 개발 도구\n\n초보자를 위한 웹 개발 학습 리소스\nHTML 홈페이지 :\nhttp://tcpschool.com/html/intro\nHTML(HyperText Markup Language)은 웹페이지에 내용을 기술하고 정의하는 데 사용\n\nCSS 홈페이지 :\nhttp://tcpschool.com/css/intro\nCSS(Cascading Style Sheets)는 웹페이지 콘텐츠의 모양이나 표현을 기술하는 데 사용\n\nJavaScript 홈페이지 :\nhttp://tcpschool.com/javascript/intro\nCSS(Cascading Style Sheets)는 웹페이지 콘텐츠 개발에 사용되는 스크립트 프로그래밍 언어\n\nShiny 개발을 위한 리소스\nFont Awesome :\nhttps://fontawesome.com/\n앱에 사용할 아이콘 선택을 위한 정보\n\n",
      "last_modified": "2023-06-18T23:02:08+09:00"
    }
  ],
  "collections": []
}
